{"version":3,"sources":["images/mine.svg","images/crossedMine.svg","images/flag.svg","styles/shadow.ts","utils/constants.ts","utils/range.ts","utils/board.ts","redux/gameSlice.ts","utils/useTypedSelector.ts","components/MinesNumber.tsx","components/Cell.tsx","components/Board.tsx","components/DifficultySelect.tsx","components/Digits.tsx","components/MinesCounter.tsx","components/StartGameButton.tsx","components/Timer.tsx","components/Header.tsx","components/Game.tsx","App.tsx","redux/store.ts","serviceWorker.ts","styles/global.ts","index.tsx"],"names":["module","exports","createShadow","inverted","topLeftColor","bottomRightColor","css","shadow","invertedShadow","difficultyLevels","boardSizes","beginner","width","height","mines","intermediate","expert","range","from","to","i","createBoard","difficulty","id","map","isOpen","isFlagged","isMine","adjacentMines","getRandomInteger","min","max","Number","MAX_SAFE_INTEGER","Math","ceil","floor","random","getAdjacentCoordinates","board","x","y","filter","coords","countAdjacentMines","forEach","row","cell","getAdjacentCells","length","initialState","status","createSlice","name","reducers","initGame","state","action","payload","clickCell","startCoords","isStartCell","generateMines","openCell","memo","adjacentCoords","closedCells","flat","every","checkWin","flagCell","actions","reducer","gameReducer","useTypedSelector","useSelector","numbersColors","styled","span","color","MinesNumber","value","openCellStyle","StyledCell","button","OpenCell","exploded","ClosedCell","CellIcon","img","Cell","data","onClick","onRightClick","game","src","mineImage","alt","crossedMineImage","disabled","onContextMenu","event","preventDefault","flagImage","Container","div","Row","Board","dispatch","useDispatch","handleClick","handleRightClick","key","Select","Button","active","DifficultySelect","difficultyState","numbersStyles","Numbers","GhostNumbers","Digits","MinesCounter","minesLeft","reduce","res","rowRes","Emoji","emojis","starting","playing","win","lose","StartGameButton","Timer","useState","setValue","useEffect","interval","setInterval","stateValue","clearInterval","header","Left","Center","Right","Header","Game","AppContainer","main","App","store","configureStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","addEventListener","installingWorker","installing","controller","console","log","onUpdate","onSuccess","catch","error","GlobalStyle","createGlobalStyle","dsegWoff2","dsegWoff","dsegTtf","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5d192ee3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mine.b0c0cb28.svg\";","module.exports = __webpack_public_path__ + \"static/media/crossedMine.1fc76a19.svg\";","module.exports = __webpack_public_path__ + \"static/media/flag.9750a8d1.svg\";","import { css } from 'styled-components/macro';\n\nconst light = 'white';\nconst dark = 'grey';\n\nconst createShadow = (inverted: boolean) => {\n  const topLeftColor = inverted ? dark : light;\n  const bottomRightColor = inverted ? light : dark;\n\n  return css`\n    background-color: lightgray;\n    border-width: 0.2rem;\n    border-style: solid;\n    border-top-color: ${topLeftColor};\n    border-left-color: ${topLeftColor};\n    border-bottom-color: ${bottomRightColor};\n    border-right-color: ${bottomRightColor};\n  `;\n};\n\nexport const shadow = createShadow(false);\n\nexport const invertedShadow = createShadow(true);\n","export const difficultyLevels = ['beginner', 'intermediate', 'expert'] as const;\n\nexport type Difficulty = typeof difficultyLevels[number];\n\nexport interface BoardData {\n  width: number;\n  height: number;\n  mines: number;\n}\n\nexport const boardSizes: Readonly<Record<Difficulty, BoardData>> = {\n  beginner: { width: 9, height: 9, mines: 10 },\n  intermediate: { width: 16, height: 16, mines: 40 },\n  expert: { width: 30, height: 16, mines: 99 },\n};\n\nexport interface Coords {\n  x: number;\n  y: number;\n}\n","export interface RangeParams {\n  from?: number;\n  to: number;\n}\n\nexport function* range({ from = 0, to }: RangeParams): Generator<number> {\n  for (let i = from; i < to; i += 1) {\n    yield i;\n  }\n}\n","import { Difficulty, boardSizes, Coords } from './constants';\nimport { range } from './range';\n\ninterface BaseCell {\n  id: number;\n\n  isOpen: boolean;\n  isFlagged: boolean;\n}\n\ninterface MineCell extends BaseCell {\n  isMine: true;\n}\n\ninterface NumberCell extends BaseCell {\n  isMine: false;\n  adjacentMines: number;\n}\n\nexport type GameCell = MineCell | NumberCell;\n\nexport type GameBoard = GameCell[][];\n\nexport const createBoard = (difficulty: Difficulty): GameBoard => {\n  const { width, height } = boardSizes[difficulty];\n  let id = 0;\n\n  return [...range({ to: height })].map(() => {\n    return [...range({ to: width })].map<GameCell>(() => ({\n      id: id++,\n      isOpen: false,\n      isFlagged: false,\n      isMine: false,\n      adjacentMines: 0,\n    }));\n  });\n};\n\nconst getRandomInteger = ({ min = 0, max = Number.MAX_SAFE_INTEGER }) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nexport const generateMines = (\n  board: GameBoard,\n  difficulty: Difficulty,\n  startCoords: Coords\n): void => {\n  const { width, height, mines } = boardSizes[difficulty];\n  let i = 0;\n\n  while (i < mines) {\n    const x = getRandomInteger({ max: width - 1 });\n    const y = getRandomInteger({ max: height - 1 });\n    const cell = board[y][x];\n    const isStartCell = x === startCoords.x && y === startCoords.y;\n    const skipCell = cell.isMine || isStartCell;\n\n    if (!skipCell) {\n      cell.isMine = true;\n      i += 1;\n    }\n  }\n};\n\nexport const getAdjacentCoordinates = (\n  board: GameBoard,\n  { x, y }: Coords\n): Coords[] => {\n  return [\n    { x: x - 1, y: y - 1 }, // top left\n    { x, y: y - 1 }, // top\n    { x: x + 1, y: y - 1 }, // top right\n    { x: x - 1, y }, // left\n    { x: x + 1, y }, // right\n    { x: x - 1, y: y + 1 }, // bottom left\n    { x, y: y + 1 }, // bottom\n    { x: x + 1, y: y + 1 }, // bottom right\n  ].filter((coords) => board[coords.y]?.[coords.x] != null);\n};\nexport const getAdjacentCells = (\n  board: GameBoard,\n  coords: Coords\n): GameCell[] => {\n  const adjacentCellsCoordinates = getAdjacentCoordinates(board, coords);\n\n  return adjacentCellsCoordinates.map(({ x, y }) => board[y][x]);\n};\n\nexport const countAdjacentMines = (board: GameBoard): void => {\n  board.forEach((row, y) => {\n    row.forEach((cell, x) => {\n      if (cell.isMine) return;\n\n      const adjacentMines = getAdjacentCells(board, { x, y }).filter(\n        ({ isMine }) => isMine\n      ).length;\n\n      cell.adjacentMines = adjacentMines;\n    });\n  });\n};\n\nexport const openCell = (\n  board: GameBoard,\n  { x, y }: Coords,\n  memo: boolean[][] = []\n): void => {\n  const cell = board[y][x];\n  cell.isOpen = true;\n\n  if (memo[y] == null) memo[y] = [];\n  if (memo[y][x]) return;\n  memo[y][x] = true;\n\n  if (cell.isMine) return;\n\n  if (cell.adjacentMines === 0) {\n    const adjacentCoords = getAdjacentCoordinates(board, { x, y });\n\n    adjacentCoords.forEach((coords) => openCell(board, coords, memo));\n  }\n};\n\nexport const checkWin = (board: GameBoard, difficulty: Difficulty): boolean => {\n  const { mines } = boardSizes[difficulty];\n\n  const closedCells = board.flat().filter(({ isOpen }) => !isOpen);\n\n  return (\n    closedCells.length === mines && closedCells.every(({ isMine }) => isMine)\n  );\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport {\n  createBoard,\n  generateMines,\n  countAdjacentMines,\n  GameBoard,\n  openCell,\n  checkWin,\n} from '../utils/board';\nimport { Coords, Difficulty } from '../utils/constants';\n\nexport type GameStatus = 'starting' | 'playing' | 'win' | 'lose';\n\nexport interface GameBoardState {\n  status: GameStatus;\n  difficulty: Difficulty;\n  board: GameBoard;\n}\n\nconst initialDifficultyLevel: Difficulty = 'beginner';\n\nconst initialState: GameBoardState = {\n  status: 'starting',\n  difficulty: initialDifficultyLevel,\n  board: createBoard(initialDifficultyLevel),\n};\n\nconst { actions, reducer } = createSlice({\n  name: 'game',\n  initialState,\n  reducers: {\n    initGame(state, action: PayloadAction<Difficulty | undefined>) {\n      const { payload: difficulty = state.difficulty } = action;\n\n      state.board = createBoard(difficulty);\n      state.status = 'starting';\n      state.difficulty = difficulty;\n    },\n    clickCell(state, action: PayloadAction<Coords>) {\n      const { payload } = action;\n      const { x, y } = payload;\n\n      if (state.status === 'win' || state.status === 'lose') {\n        return;\n      }\n\n      if (state.status === 'starting') {\n        generateMines(state.board, state.difficulty, { x, y });\n        countAdjacentMines(state.board);\n\n        state.status = 'playing';\n      }\n\n      if (state.board[y][x].isMine) {\n        state.status = 'lose';\n      }\n\n      openCell(state.board, { x, y });\n\n      if (checkWin(state.board, state.difficulty)) {\n        state.status = 'win';\n      }\n    },\n    flagCell(state, action: PayloadAction<Coords>) {\n      const { payload } = action;\n      const { x, y } = payload;\n\n      if (state.status === 'playing') {\n        state.board[y][x].isFlagged = !state.board[y][x].isFlagged;\n      }\n    },\n  },\n});\n\nexport const { clickCell, flagCell, initGame } = actions;\n\nexport const gameReducer = reducer;\n","import { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../redux/store';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport styled from 'styled-components/macro';\n\nconst numbersColors = [\n  '#0000fd',\n  '#017e00',\n  '#fd0000',\n  '#010180',\n  '#830003',\n  '#008080',\n  '#000000',\n  '#808080',\n] as const;\n\nconst Number = styled.span<{ color: typeof numbersColors[number] }>`\n  color: ${({ color }) => color};\n  font-family: 'Lato', sans-serif;\n  font-weight: 900;\n  font-size: 1.2rem;\n`;\n\nexport const MinesNumber: React.FC<{ value: number }> = ({ value }) => {\n  const color = numbersColors[value - 1];\n\n  return <Number color={color}>{value === 0 ? null : value}</Number>;\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components/macro';\nimport { shadow } from '../styles/shadow';\nimport { Coords } from '../utils/constants';\nimport { MinesNumber } from './MinesNumber';\nimport mineImage from '../images/mine.svg';\nimport crossedMineImage from '../images/crossedMine.svg';\nimport flagImage from '../images/flag.svg';\nimport { GameCell } from '../utils/board';\nimport { useTypedSelector } from '../utils/useTypedSelector';\n\nconst openCellStyle = css`\n  border-color: grey;\n  border-style: solid;\n  border-width: 0;\n  border-top-width: 1px;\n  border-left-width: 1px;\n`;\n\nexport const StyledCell = styled.button`\n  box-sizing: border-box;\n  width: 1.6rem;\n  height: 1.6rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  outline: none;\n  background: none;\n`;\n\nexport const OpenCell = styled(StyledCell)<{ exploded?: boolean }>`\n  ${openCellStyle}\n  ${({ exploded }) => exploded && 'background-color: red;'}\n\n  & > * {\n    margin: -1px 0 0 -1px;\n  }\n`;\n\nexport const ClosedCell = styled(StyledCell)`\n  ${shadow}\n\n  &:active:not(:disabled) {\n    ${openCellStyle}\n  }\n`;\n\ninterface Props {\n  data: GameCell;\n  coords: Coords;\n  onClick(coords: Coords): void;\n  onRightClick(coordinates: Coords): void;\n}\n\nconst CellIcon = styled.img`\n  width: 80%;\n`;\n\nexport const Cell: React.FC<Props> = ({\n  coords,\n  data,\n  onClick,\n  onRightClick,\n}) => {\n  const status = useTypedSelector((state) => state.game.status);\n\n  if (data.isOpen) {\n    return (\n      <OpenCell exploded={data.isMine}>\n        {data.isMine ? (\n          <CellIcon src={mineImage} alt=\"Mine\" />\n        ) : (\n          <MinesNumber value={data.adjacentMines} />\n        )}\n      </OpenCell>\n    );\n  }\n\n  if (status === 'lose') {\n    if (data.isMine && !data.isFlagged) {\n      return (\n        <OpenCell>\n          <CellIcon src={mineImage} alt=\"Mine\" />\n        </OpenCell>\n      );\n    }\n    if (!data.isMine && data.isFlagged) {\n      return (\n        <OpenCell>\n          <CellIcon src={crossedMineImage} alt=\"Crossed mine\" />\n        </OpenCell>\n      );\n    }\n  }\n\n  return (\n    <ClosedCell\n      disabled={data.isFlagged}\n      onClick={() => {\n        onClick(coords);\n      }}\n      onContextMenu={(event) => {\n        event.preventDefault();\n        onRightClick(coords);\n      }}\n    >\n      {(data.isFlagged || status === 'win') && (\n        <CellIcon src={flagImage} alt=\"Flag\" />\n      )}\n    </ClosedCell>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components/macro';\nimport { clickCell, flagCell } from '../redux/gameSlice';\nimport { invertedShadow } from '../styles/shadow';\nimport { Coords } from '../utils/constants';\nimport { useTypedSelector } from '../utils/useTypedSelector';\nimport { Cell, OpenCell } from './Cell';\n\nconst Container = styled.div`\n  ${invertedShadow}\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 0.4rem;\n  margin-bottom: 0.4rem;\n`;\n\nconst Row = styled.div`\n  display: flex;\n\n  &:first-child ${OpenCell} {\n    border-top-width: 0;\n  }\n\n  ${OpenCell}:first-child {\n    border-left-width: 0;\n  }\n`;\n\nexport const Board: React.FC = () => {\n  const dispatch = useDispatch();\n  const board = useTypedSelector((state) => state.game.board);\n\n  const handleClick = (coords: Coords) => dispatch(clickCell(coords));\n\n  const handleRightClick = (coords: Coords) => dispatch(flagCell(coords));\n\n  return (\n    <Container>\n      {board.map((row, y) => (\n        <Row key={row[0].id}>\n          {row.map((cell, x) => (\n            <Cell\n              key={cell.id}\n              data={cell}\n              coords={{ x, y }}\n              onClick={handleClick}\n              onRightClick={handleRightClick}\n            />\n          ))}\n        </Row>\n      ))}\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { useDispatch } from 'react-redux';\nimport { invertedShadow, shadow } from '../styles/shadow';\nimport { Difficulty, difficultyLevels } from '../utils/constants';\nimport { initGame } from '../redux/gameSlice';\nimport { useTypedSelector } from '../utils/useTypedSelector';\n\ninterface ButtonProps {\n  active?: boolean;\n}\n\nconst Select = styled.div`\n  ${invertedShadow}\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Button = styled.button<ButtonProps>`\n  ${shadow}\n  opacity: ${({ active }) => (active ? 1 : 0.6)};\n  padding: 0.2rem;\n  outline: none;\n  cursor: pointer;\n  text-transform: capitalize;\n  flex-grow: 1;\n`;\n\nexport const DifficultySelect: React.FC = () => {\n  const dispatch = useDispatch();\n  const difficultyState = useTypedSelector((state) => state.game.difficulty);\n\n  const handleClick = (difficulty: Difficulty) => {\n    dispatch(initGame(difficulty));\n  };\n\n  return (\n    <Select>\n      {difficultyLevels.map((difficulty) => (\n        <Button\n          key={difficulty}\n          active={difficultyState === difficulty}\n          onClick={() => handleClick(difficulty)}\n        >\n          {difficulty}\n        </Button>\n      ))}\n    </Select>\n  );\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components/macro';\nimport { invertedShadow } from '../styles/shadow';\n\nconst Container = styled.div`\n  ${invertedShadow}\n  position: relative;\n  background-color: black;\n  height: 2.6rem;\n  box-sizing: border-box;\n`;\n\nconst numbersStyles = css`\n  color: red;\n  font-family: 'DSEG7-Classic';\n  font-weight: bold;\n  font-size: 1.8rem;\n  letter-spacing: -0.1rem;\n  box-sizing: border-box;\n  padding: 0.1rem;\n`;\n\nconst Numbers = styled.div`\n  ${numbersStyles}\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n\nconst GhostNumbers = styled.div`\n  ${numbersStyles}\n  opacity: 0.3;\n`;\n\ninterface Props {\n  value: number;\n}\n\nexport const Digits: React.FC<Props> = ({ value }) => {\n  return (\n    <Container>\n      <GhostNumbers>888</GhostNumbers>\n      <Numbers>{value}</Numbers>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { boardSizes } from '../utils/constants';\nimport { useTypedSelector } from '../utils/useTypedSelector';\nimport { Digits } from './Digits';\n\nexport const MinesCounter: React.FC = () => {\n  const difficulty = useTypedSelector((state) => state.game.difficulty);\n  const board = useTypedSelector((state) => state.game.board);\n  const { mines } = boardSizes[difficulty];\n  const flaggedCellsCount = board.reduce(\n    (res, row) =>\n      res +\n      row.reduce((rowRes, cell) => (cell.isFlagged ? rowRes + 1 : rowRes), 0),\n    0\n  );\n  const minesLeft = mines - flaggedCellsCount;\n\n  return <Digits value={minesLeft} />;\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { GameStatus, initGame } from '../redux/gameSlice';\nimport { invertedShadow, shadow } from '../styles/shadow';\nimport { useTypedSelector } from '../utils/useTypedSelector';\n\nconst Button = styled.button`\n  ${shadow}\n  padding: 0;\n  box-sizing: border-box;\n  width: 2.6rem;\n  height: 2.6rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  outline: none;\n\n  &:active {\n    ${invertedShadow}\n  }\n`;\n\nconst Emoji = styled.div`\n  font-size: 1.4rem;\n  margin-top: -0.2rem;\n`;\n\nconst emojis: Record<GameStatus, string> = {\n  starting: '🙂',\n  playing: '🙂',\n  win: '😎',\n  lose: '😵',\n};\n\nexport const StartGameButton: React.FC = () => {\n  const dispatch = useDispatch();\n  const status = useTypedSelector((state) => state.game.status);\n\n  const handleClick = () => {\n    dispatch(initGame());\n  };\n\n  return (\n    <Button onClick={handleClick}>\n      <Emoji>{emojis[status]}</Emoji>\n    </Button>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useTypedSelector } from '../utils/useTypedSelector';\nimport { Digits } from './Digits';\n\nexport const Timer: React.FC = () => {\n  const [value, setValue] = useState(0);\n  const status = useTypedSelector((state) => state.game.status);\n\n  useEffect(() => {\n    let interval: number | undefined;\n\n    if (status === 'playing') {\n      interval = setInterval(() => {\n        setValue((stateValue) => stateValue + 1);\n      }, 1000);\n\n      return () => {\n        clearInterval(interval);\n      };\n    }\n\n    if (status === 'lose' || status === 'win') {\n      clearInterval(interval);\n    }\n\n    if (status === 'starting') {\n      setValue(0);\n    }\n  }, [status]);\n\n  return <Digits value={value} />;\n};\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { invertedShadow } from '../styles/shadow';\nimport { MinesCounter } from './MinesCounter';\nimport { StartGameButton } from './StartGameButton';\nimport { Timer } from './Timer';\n\nconst Container = styled.header`\n  ${invertedShadow}\n  padding: 0.2rem;\n  display: flex;\n`;\n\nconst Left = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex: 1;\n`;\n\nconst Center = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Right = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  flex: 1;\n`;\n\nexport const Header: React.FC = () => {\n  return (\n    <Container>\n      <Left>\n        <MinesCounter />\n      </Left>\n      <Center>\n        <StartGameButton />\n      </Center>\n      <Right>\n        <Timer />\n      </Right>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { shadow } from '../styles/shadow';\nimport { Board } from './Board';\nimport { DifficultySelect } from './DifficultySelect';\nimport { Header } from './Header';\n\nconst Container = styled.div`\n  ${shadow}\n  padding: 0.4rem;\n  user-select: none;\n`;\n\nexport const Game: React.FC = () => {\n  return (\n    <Container>\n      <Header />\n      <Board />\n      <DifficultySelect />\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport { Game } from './components/Game';\n\nconst AppContainer = styled.main`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const App: React.FC = () => (\n  <AppContainer>\n    <Game />\n  </AppContainer>\n);\n","import { configureStore } from '@reduxjs/toolkit';\nimport { gameReducer } from './gameSlice';\n\nexport const store = configureStore({\n  reducer: {\n    game: gameReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n","/* eslint-disable no-console */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.addEventListener('updatefound', () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.addEventListener('statechange', () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        });\n      });\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nexport function unregister(): void {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\nexport function register(config?: Config): void {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n","import { createGlobalStyle } from 'styled-components/macro';\nimport dsegWoff2 from 'dseg/fonts/DSEG7-Classic/DSEG7Classic-Bold.woff2';\nimport dsegWoff from 'dseg/fonts/DSEG7-Classic/DSEG7Classic-Bold.woff';\nimport dsegTtf from 'dseg/fonts/DSEG7-Classic/DSEG7Classic-Bold.ttf';\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Lato:wght@900&display=swap');\n  @font-face {\n    font-family: 'DSEG7-Classic';\n    src: url(${dsegWoff2}) format('woff2'),\n    url(${dsegWoff}) format('woff'),\n    url(${dsegTtf}) format('truetype');\n    font-weight: bold;\n    font-style: normal;\n  }\n\n  html, body, #root {\n    height: 100%; \n  }\n\n  body { \n    margin: 0;\n    background-color: #008080;\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: 30%;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport { store } from './redux/store';\nimport { register } from './serviceWorker';\nimport { GlobalStyle } from './styles/global';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nregister();\n"],"sourceRoot":""}